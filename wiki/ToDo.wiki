#summary Work to be Done.
#labels Featured

= Introduction =

Selection of To Dos.  Probably best to keep this page to stuff that has to be done within the next week or so

= 'Blob' Prototype ([http://tenfiftyfour.com/akAGames/design/Blob%20Prototypes/Blob%20Dump/BlobTest15.swf Latest Iteration])=
 ===Optomisation===
 * Only check appropriate spatial grid squares
 * Attempt to Limit Number of Springs per Particle
 * Replace vector += vector. with vector.x += vector.x;
 * Implement suggestions from Mr Kot.
  * _"well, apart from the neighbor searching algorithm, there are also many redundant calculations. such as the distance and things like that. in the more recent versions, i kind of strayed a little from the paper and so i just store all the forces that the particles are exerting on each other, and apply them after they've all been calculated instead of moving in the middle so you can just store distance and density and things like that."_
  * Find Redundant Distance Calculations
  * Collate All Forces, and Apply at end
 ===Extra Sliders===
 * ~~Slider for Particle Size~~
 ===Additions===
 * ~~Spatial Grid~~
 ===Modification of Particle Behaviour===
 * ~~Viscoelastic~~
 ===Skin===
{{{
if(has neighbours){
  if(max neighbours){
    highlight(green);
  } else {
    highlight(grey);
  }
} else {
  highlight(red);
}
}}}

 * Any particles that have less than the max neighbours are considered to be on the "outside" of the blob.
  * STEP 1 : Determine which particles are on the inside, and which are on the outside 
   * In Demo Program, Change colour of those particles with all points full
  * STEP 2 : Determine particle dense point ( ie 'centre' ) or perpendicular angle ( to know which direction the 'outside' is
  * STEP 3 : Place a series of 'perimeter springs' around the circumference of the blob
  * STEP 4 : Use Drawing Tools to draw skin, using Perimeter springs as guide points
 * Drawing of exterior blob surface
 * Need to figure out how to handle cases where small blobs consist of less particles than max neighbours.
 ===Centre of Gravity ( ie, to form 'ball' )===
 * Experiment with this anyway, we'll see how it works.  Last on the 'to do' list imo

= Parasite Prototype ([http://tenfiftyfour.com/akAGames/design/Movement%20Prototypes/Flash_IKParasite3.swf Latest Iteration])=
 ===Stiffness===
 * 'locking' the angles in place
  * Have to figure out way to get the current angle, and tell IK to stay at that angle
  * From there, have to unlock dynamic IK Lengths
 ===Springing===
 * Simple Parabolic Motion, Power Determined by current width / original width